JSON is a JavaScript 
JavaScript : objects, functions, primitives, loops, and use the console for debugging purposes.
Library utilizes functions, must have a “books” array property, 
The array will contain book objects.
Pass through 1 function

A book must be an object 
A book object must have the following properties:
title - string representing the title of the book.
author - string representing the authors name.
numberOfPages - number representing the total page numbers. 
publishDate - javascript date object representing the published date.

library must have (9)public functions
(1) addBook(book) A book object to your books array
Return. Boolean true if not added, false if already added
(2) removeBookByTitle(title) Remove book array by its title. 
Return: boolean true if the book(s) were removed, false if no books match
(3) removeBookByAuthor(authorName) Remove a specific book from books array by author name.

Return: boolean true if the book(s) were removed, false if no books match

(4) getRandomBook() Return a random book object from your books array

Return: book object if you find a book, null if there are no books

(5) getBookByTitle(title)
Return all books that completely or partially matches the string title passed into the function

Return: array of book objects if you find books with matching titles, empty array if no books are found

(6) getBooksByAuthor(authorName)
Find any books where the author’s name partially or completely matches the authorName argument passed to the function.

Return: array of books if you find books with match authors, empty array if no books match

(7) addBooks(books)
Takes multiple books, in the form of an array of book objects, and adds the objects to your books array.

Return: number number of books successfully added, 0 if no books were added
(8)getAuthors()
Find the distinct authors’ names from all books in your library

Return: array of strings the names of all distinct authors, empty array if no books exist or if no authors exist

(9)getRandomAuthorName()
Retrieves a random author name from your books collection

Return: string author name, null if no books exist


Application

Use localstorage (http://www.w3schools.com/html/html5_webstorage.asp) and JSON.stringify to save the state of your library
Add a more robust search function to your app to allow you to filter by one or more book properties
the search function should return an array of book instances
Make your library a singleton
A prototyped book class should also be made, with each ‘book’ in your library being an instance of the book class.
